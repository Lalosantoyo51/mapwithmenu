"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var image_1 = require("tns-core-modules/ui/image");
var imageSource = require("tns-core-modules/image-source");
var scroll_view_1 = require("tns-core-modules/ui/scroll-view");
var view_1 = require("tns-core-modules/ui/core/view");
exports.stretchProperty = new view_1.Property({
    name: 'stretch'
});
exports.zoomScaleProperty = new view_1.Property({
    name: 'zoomScale',
    defaultValue: 1
});
exports.minZoomScaleProperty = new view_1.Property({
    name: 'minZoom',
    defaultValue: 1
});
exports.maxZoomScaleProperty = new view_1.Property({
    name: 'maxZoom',
    defaultValue: 4
});
exports.srcProperty = new view_1.Property({
    name: 'src'
});
var ImageZoom = (function (_super) {
    __extends(ImageZoom, _super);
    function ImageZoom() {
        var _this = _super.call(this) || this;
        _this.delegate = UIScrollViewDelegateImpl.initWithOwner(new WeakRef(_this));
        var nativeView = _this.nativeView;
        _this._image = new image_1.Image();
        nativeView.delegate = _this.delegate;
        nativeView.zoomScale = _this.zoomScale;
        nativeView.minimumZoomScale = _this.minZoom;
        nativeView.maximumZoomScale = _this.maxZoom;
        _this.content = _this._image;
        return _this;
    }
    ImageZoom.prototype.disposeNativeView = function () {
        this.delegate = null;
    };
    ImageZoom.prototype[exports.srcProperty.setNative] = function (src) {
        if (src.startsWith('res://')) {
            this._image.imageSource = imageSource.fromNativeSource(UIImage.imageNamed(src.replace('res://', '')));
        }
        else {
            this._image.src = src;
        }
    };
    ImageZoom.prototype[exports.stretchProperty.setNative] = function (stretch) {
        this._image.stretch = stretch;
    };
    ImageZoom.prototype[exports.zoomScaleProperty.setNative] = function (scale) {
        if (this.nativeView) {
            this.nativeView.zoomScale = scale;
        }
    };
    ImageZoom.prototype[exports.minZoomScaleProperty.setNative] = function (scale) {
        if (this.nativeView) {
            this.nativeView.minimumZoomScale = scale;
        }
    };
    ImageZoom.prototype[exports.maxZoomScaleProperty.setNative] = function (scale) {
        if (this.nativeView) {
            this.nativeView.maximumZoomScale = scale;
        }
    };
    return ImageZoom;
}(scroll_view_1.ScrollView));
exports.ImageZoom = ImageZoom;
exports.srcProperty.register(ImageZoom);
exports.stretchProperty.register(ImageZoom);
exports.zoomScaleProperty.register(ImageZoom);
exports.minZoomScaleProperty.register(ImageZoom);
exports.maxZoomScaleProperty.register(ImageZoom);
var UIScrollViewDelegateImpl = (function (_super) {
    __extends(UIScrollViewDelegateImpl, _super);
    function UIScrollViewDelegateImpl() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UIScrollViewDelegateImpl.initWithOwner = function (owner) {
        var delegate = new UIScrollViewDelegateImpl();
        delegate.owner = owner;
        return delegate;
    };
    UIScrollViewDelegateImpl.prototype.viewForZoomingInScrollView = function (scrollView) {
        var owner = this.owner.get();
        return owner._image.nativeView;
    };
    return UIScrollViewDelegateImpl;
}(NSObject));
UIScrollViewDelegateImpl.ObjCProtocols = [UIScrollViewDelegate];
exports.UIScrollViewDelegateImpl = UIScrollViewDelegateImpl;
//# sourceMappingURL=image-zoom.ios.js.map